--- stm-target-gcc_4.6.3_org.spec	2013-04-01 20:26:55.000000000 +0200
+++ stm-target-gcc.spec	2013-05-13 13:47:52.778325573 +0200
@@ -1,9 +1,9 @@
 Summary: GNU Compiler Collection
 Name: %{_stm_pkg_prefix}-target-gcc
-%if_target_cpu sh
+%if %target_cpu sh
 Version: 4.6.3
 %else
-%if_target_cpu arm
+%if %target_cpu arm
 Version: 4.6.3
 %else
 Version: 4.2.4
@@ -15,6 +15,7 @@
 Source0: ftp://gcc.gnu.org/pub/gcc/releases/gcc-%{version}/gcc-%{version}.tar.bz2
 Source1: gcc-protoize.1
 
+Patch0: stm-target-gcc.%{version}-%{release}.diff
 Patch1: gcc-4.2.4-multilibpath.patch
 Patch3: gcc-4.5.0-autoconf.patch
 
@@ -78,6 +79,9 @@
 BuildRequires: %{_stm_pkg_prefix}-%{_stm_target_arch}-libelf
 %endif
 
+# Quick and dirty workaround. RPM complains about unpackaged files.
+%define _unpackaged_files_terminate_build 0
+
 %description
 This is the GNU C compiler, a fairly portable optimizing compiler which
 supports multiple languages.  This package includes support for C, and
@@ -90,10 +94,10 @@
 Provides: %{_stm_pkg_prefix}-generic-%{_stm_target_arch}-gcc
 Requires: %{_stm_pkg_prefix}-%{_stm_target_arch}-binutils
 Requires: %{_stm_pkg_prefix}-%{_stm_target_arch}-cpp = %{version}
-%if_target_arch_no_uclibc
+%if %target_arch_no_uclibc
 Requires: %{_stm_pkg_prefix}-%{_stm_target_arch}-glibc-dev
 %endif
-%if_target_arch_uclibc
+%if %target_arch_uclibc
 Requires: %{_stm_pkg_prefix}-%{_stm_target_arch}-uclibc-nptl-dev
 %endif
 
@@ -168,6 +172,7 @@
 
 %prep
 %setup -n gcc-%{version} -q
+%patch0 -p1
 
 # Common patches
 %if "%{_stm_target_cpu}" != "arm"
@@ -177,7 +182,7 @@
 %patch3 -p1
 
 # SH4 common patches
-%if_target_cpu sh
+%if %target_cpu sh
 %patch100 -p1
 %patch101 -p1
 %patch104 -p1
@@ -190,7 +195,7 @@
 %endif
 
 # SH4 uClibc patches
-%if_target_arch sh4_uclibc
+%if %target_arch sh4_uclibc
 %patch200 -p1
 %patch201 -p1
 %patch202 -p1
@@ -203,7 +208,7 @@
 %endif
 
 # ARM common patches
-%if_target_cpu arm
+%if %target_cpu arm
 %patch300 -p1
 %patch301 -p1
 %patch302 -p1
@@ -215,12 +220,12 @@
 %endif
 
 # ARM uClibc patches
-%if_target_arch armv5_uclibc armv6_uclibc armv7_uclibc
+%if %target_arch armv5_uclibc armv6_uclibc armv7_uclibc
 %patch400 -p1
 %endif
 
 # uClibc common patches
-%if_target_arch_uclibc
+%if %target_arch_uclibc
 %patch500 -p1
 %endif
 
@@ -251,9 +256,6 @@
 export CFLAGS="-Os"
 export CXXFLAGS="-Os"
 
-export CC_FOR_BUILD="gcc -m32"
-export CXX_FOR_BUILD="g++ -m32"
-
 # When cross compiling this fails because it needs to run code
 export ac_cv_header_stdc=yes
 
@@ -267,7 +269,6 @@
 	--enable-nls \
 	--enable-c99 \
 	--enable-long-long \
-	--with-system-zlib \
 	--enable-shared \
 %if "%{_stm_target_arch}" != "armv7" && "%{_stm_target_arch}" != "armv7_uclibc"
 	--disable-libgomp \
@@ -275,7 +276,7 @@
 	--disable-sjlj-exceptions \
 	--with-pkgversion="GCC" \
 	--with-bugurl="https://bugzilla.stlinux.com" \
-%if_target_cpu sh
+%if %target_cpu sh
 	--disable-libstdcxx-pch \
 	--enable-multilib \
 	--disable-multi-sysroot \
@@ -288,7 +289,7 @@
         --with-gmp=%{_stm_cross_target_dir} \
         --with-mpfr=%{_stm_cross_target_dir} \
         --without-ppl \
-%if_target_arch_uclibc
+%if %target_arch_uclibc
 	--with-included-gettext \
 %else
         --enable-symvers=gnu \
@@ -297,13 +298,13 @@
 %if "%{_stm_target_fpu}" == "no"
         --without-fp \
 %endif
-%if_target_arch armv7 armv7_uclibc
+%if %target_arch armv7 armv7_uclibc
 	--with-float=hard \
 	--with-fp \
 	--enable-cxx-flags=-mhard-float \
 %endif
-%if_target_cpu arm
-%if_target_arch_no_uclibc
+%if %target_cpu arm
+%if %target_arch_no_uclibc
         --with-tls=gnu2 \
 %endif
 %endif
@@ -388,6 +389,8 @@
 rm -r %{buildroot}%{_stm_cross_target_dir}%{_stm_target_man_dir}/man7
 rm -r %{buildroot}%{_gccdir}/install-tools
 rm -r %{buildroot}%{_stm_cross_target_dir}%{_stm_target_libexec_dir}/gcc/%{_stm_target_config}/%{version}/install-tools
+rm -rf %{buildroot}%{_gccdir}/include/ssl
+rm -rf %{buildroot}%{_gccdir}/include/xulrunner-1.9.2.17/nss
 
 %unfixincludes %{buildroot}%{_gccdir}
 
@@ -429,7 +432,7 @@
 %{_gccdir}/include/mf-runtime.h
 %{_gccdir}/include/limits.h
 
-%if_target_cpu arm
+%if %target_cpu arm
 %{_gccdir}/include/mmintrin.h
 %endif
 
@@ -489,7 +492,7 @@
 %{_gccdir}/plugin/include/sysroot-suffix.h
 %endif
 
-%if_target_cpu sh
+%if %target_cpu sh
 %{_gccdir}/plugin/include/config/sh/sh.h
 %{_gccdir}/plugin/include/config/sh/elf.h
 %{_gccdir}/plugin/include/config/sh/linux.h
@@ -497,7 +500,7 @@
 %{_gccdir}/plugin/include/config/sh/little.h
 %endif
 
-%if_target_cpu arm
+%if %target_cpu arm
 %{_gccdir}/include/arm_neon.h
 %{_gccdir}/plugin/include/config/arm/aout.h
 %{_gccdir}/plugin/include/config/arm/arm-protos.h
@@ -508,7 +511,7 @@
 %{_gccdir}/plugin/include/config/arm/linux-elf.h
 %{_gccdir}/plugin/include/config/arm/linux-gas.h
 
-%if_target_arch armv7 armv7_uclibc
+%if %target_arch armv7 armv7_uclibc
 %{_gccdir}/include/omp.h
 %{_stm_cross_target_dir}%{_stm_target_lib_dir}/libgomp.a
 %{_stm_cross_target_dir}%{_stm_target_lib_dir}/libgomp.la
@@ -667,7 +670,7 @@
 %{_gccdir}/plugin/include/config/linux-android.h
 %endif
 
-%if_target_cpu arm
+%if %target_cpu arm
 %{_gccdir}/plugin/include/internal-fn.def
 %{_gccdir}/plugin/include/internal-fn.h
 %{_gccdir}/plugin/libgcc/config/arm/bpabi-lib.h
@@ -714,11 +717,11 @@
 %files -n %{_libcpp_pkgname}
 %defattr(-,root,root)
 %{_stm_cross_target_dir}%{_stm_target_lib_dir}/libstdc++.so.*
-%if_target_arch armv5 armv6 armv7
+%if %target_arch armv5 armv6 armv7
 %{_stm_cross_target_dir}%{_stm_target_sharedstate_dir}/locale/*/LC_MESSAGES/libstdc++.mo
 %endif
-%if_target_cpu sh
-%if_target_arch_no_uclibc
+%if %target_cpu sh
+%if %target_arch_no_uclibc
 %{_stm_cross_target_dir}%{_stm_target_sharedstate_dir}/locale/*/LC_MESSAGES/libstdc++.mo
 %endif
 %endif
