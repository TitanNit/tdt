--- linux-sh4/fs/cifs/cifspdu.h	2009-12-03 04:51:21.000000000 +0100
+++ linux-sh4/fs/cifs/cifspdu.h.patched	2011-07-20 01:05:11.000000000 +0200
@@ -118,7 +118,7 @@
 /*
  * Starting value for maximum SMB size negotiation
  */
-#define CIFS_MAX_MSGSIZE (4*4096)
+#define CIFS_MAX_MSGSIZE (16*4096)
 
 /*
  * Size of encrypted user password in bytes
--- linux-sh4/include/net/af_unix.h	2009-11-22 00:08:19.000000000 +0100
+++ linux-sh4/include/net/af_unix.h	2009-11-22 00:08:47.000000000 +0100
@@ -11,7 +11,7 @@
 extern void unix_notinflight(struct file *fp);
 extern void unix_gc(void);
 
-#define UNIX_HASH_SIZE	256
+#define UNIX_HASH_SIZE	16
 
 extern struct hlist_head unix_socket_table[UNIX_HASH_SIZE + 1];
 extern spinlock_t unix_table_lock;

--- linux-sh4/include/linux/tty.h	2009-11-22 01:01:58.000000000 +0100
+++ linux-sh4/include/linux/tty.h	2009-11-22 01:02:52.000000000 +0100
@@ -36,7 +36,11 @@
 #define NR_PTYS	CONFIG_LEGACY_PTY_COUNT   /* Number of legacy ptys */
 #define NR_UNIX98_PTY_DEFAULT	4096      /* Default maximum for Unix98 ptys */
 #define NR_UNIX98_PTY_MAX	(1 << MINORBITS) /* Absolute limit */
+#if defined(CONFIG_SH_RELOOK511) || defined(CONFIG_SH_CUBEREVO_MINI) || defined(CONFIG_SH_CUBEREVO_250HD) || defined(CONFIG_SH_CUBEREVO_MINI_FTA) || defined(CONFIG_SH_CUBEREVO_2000HD) || defined(CONFIG_SH_OCTAGON1008)
 #define NR_LDISCS		20
+#else 
+#define NR_LDISCS		4
+#endif 
 
 /*
  * This character is the same as _POSIX_VDISABLE: it cannot be used as

--- linux-sh4/include/net/protocol.h	2009-11-24 16:02:46.000000000 +0100
+++ linux-sh4/include/net/protocol.h	2009-11-24 16:03:54.000000000 +0100
@@ -30,7 +30,7 @@
 #include <linux/ipv6.h>
 #endif
 
-#define MAX_INET_PROTOS	256		/* Must be a power of 2		*/
+#define MAX_INET_PROTOS	32		/* Must be a power of 2		*/
 
 
 /* This is used to register protocols. */
 --- linux-sh4/drivers/scsi/sd.c
+++ linux-sh4/drivers/scsi/sd.c
@@ -1011,7 +1011,7 @@ static int sd_prep_fn(struct request_queue *q, struct request *rq)
 		SCpnt->cmnd[29] = (unsigned char) (this_count >> 16) & 0xff;
 		SCpnt->cmnd[30] = (unsigned char) (this_count >> 8) & 0xff;
 		SCpnt->cmnd[31] = (unsigned char) this_count & 0xff;
-	} else if (block > 0xffffffff) {
+	} else if (sdp->use_16_for_rw) {
 		SCpnt->cmnd[0] += READ_16 - READ_6;
 		SCpnt->cmnd[1] = protect | ((rq->cmd_flags & REQ_FUA) ? 0x8 : 0);
 		SCpnt->cmnd[2] = sizeof(block) > 4 ? (unsigned char) (block >> 56) & 0xff : 0;
@@ -2203,6 +2203,8 @@ got_data:
 		}
 	}
 
+	sdp->use_16_for_rw = (sdkp->capacity > 0xffffffff);
+
 	/* Rescale capacity to 512-byte units */
 	if (sector_size == 4096)
 		sdkp->capacity <<= 3;

--- linux-sh4/include/scsi/scsi_device.h
+++ linux-sh4/include/scsi/scsi_device.h
@@ -137,6 +137,7 @@ struct scsi_device {
 	unsigned use_10_for_ms:1; /* first try 10-byte mode sense/select */
 	unsigned no_report_opcodes:1;	/* no REPORT SUPPORTED OPERATION CODES */
 	unsigned no_write_same:1;	/* no WRITE SAME command */
+	unsigned use_16_for_rw:1; /* Use read/write(16) over read/write(10) */
 	unsigned skip_ms_page_8:1;	/* do not use MODE SENSE page 0x08 */
 	unsigned skip_ms_page_3f:1;	/* do not use MODE SENSE page 0x3f */
 	unsigned skip_vpd_pages:1;	/* do not read VPD pages */

