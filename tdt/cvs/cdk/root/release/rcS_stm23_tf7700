#!/bin/sh

MODDIR=/lib/modules

#/sbin/klogd
#/sbin/syslogd

rm -f /dev/vfd
rm -f /dev/rc
rm -f /dev/fpc
mknod -m 0666 /dev/fpc     c 62 0 2>/dev/null
mknod -m 0666 /dev/vfd     c 62 0 2>/dev/null
mknod -m 0666 /dev/rc      c 62 1 2>/dev/null
mknod -m 0666 /dev/fplarge c 62 2 2>/dev/null
mknod -m 0666 /dev/fpsmall c 62 3 2>/dev/null

insmod $MODDIR/e2_proc.ko
insmod $MODDIR/tffp.ko

if [ -e /var/etc/.firstboot ]; then
   echo "WAIT" > /dev/fpsmall
   echo "3 min" > /dev/fplarge
   rm /var/etc/.firstboot
   touch /dev/.devfsd
fi

/etc/init.d/mountvirtfs start

# remove /dev/ttyAS1 to avoid interference with the FP driver
if [ -e /dev/ttyAS1 ]; then
   rm -f /dev/ttyAS1
fi

# Update the GMT offset in case it changed during the standby
/bin/tffpctl --setgmtoffset

/etc/init.d/portmap start
/etc/init.d/autofs start
if [ ! -e /var/etc/.firstboot ]; then
   echo "LOAD" > /dev/fpsmall
   echo "MODULES" > /dev/fplarge
   echo "LOADING MODULES"

   echo "init stmfb"
   insmod $MODDIR/stmcore-display-stx7109c3.ko
   insmod $MODDIR/stmfb.ko display0=1280x720-32@50:12m:pal:yuv:yuv

   echo "load a firmware"
   /bin/ustslave /dev/st231-1 /boot/audio.elf
   echo "load v firmware"
   /bin/ustslave /dev/st231-0 /boot/video.elf

   echo "init embx"
   insmod $MODDIR/embxshell.ko
   insmod $MODDIR/embxmailbox.ko mailbox0=0xb9211000:136:set2 mailbox1=0xb9212000:0 ;
   insmod $MODDIR/embxshm.ko mailbox0=shm:0:7:0x60000000:0:256:256:0:1024:0xa4000000:0x10000000 ;
   insmod $MODDIR/mme_host.ko transport0=shm

   echo "init AVS"
   insmod $MODDIR/avs.ko type=stv6412

   player=`cat /proc/stb/player/version`
   echo "init player $player"
   insmod $MODDIR/mmelog.ko
   insmod $MODDIR/mpeg2hw.ko mmeName=MPEG2_TRANSFORMER1
   insmod $MODDIR/ksound.ko
   insmod $MODDIR/p2div64.ko
   insmod $MODDIR/stm_v4l2.ko
   insmod $MODDIR/pseudocard.ko
   
   insmod $MODDIR/cx24116.ko

   insmod $MODDIR/starci.ko
   insmod $MODDIR/pti.ko
   if [ $player=='player191' ]; then
      insmod $MODDIR/stm_monitor.ko
      insmod $MODDIR/stmsysfs.ko
      insmod $MODDIR/stmdvb.ko
   elif [ $player=='player179' ]; then
      insmod $MODDIR/stm_monitor.ko
      insmod $MODDIR/stmsysfs.ko
      insmod $MODDIR/stmdvb.ko
   else
      insmod $MODDIR/stmdvb.ko
      insmod $MODDIR/stm_monitor.ko
   fi
   insmod $MODDIR/player2.ko
   insmod $MODDIR/sth264pp.ko
   insmod $MODDIR/stmalloc.ko
   insmod $MODDIR/platform.ko
   insmod $MODDIR/silencegen.ko

   echo "init frontpanel"
   insmod $MODDIR/boxtype.ko
   insmod $MODDIR/simu_button.ko
   tffpctl --keyemulationmode 2
   /bin/evremote2 110 10 &

   insmod $MODDIR/bpamem.ko
   mknod /dev/bpamem c 153 0 

   showiframe -p /var/boot/bootlogo.mvi &
   stfbcontrol a 0

   # Workaround why is jfs always not mountable?
   # fsck.ext3 /dev/sda3 -a
   fsck.jfs /dev/sda3 -a

   /etc/init.d/mountall start

   /etc/init.d/hostname start

   echo "starting telnetd"
   /usr/sbin/telnetd -l /bin/autologin
   /etc/init.d/vsftpd start
   /usr/sbin/inetd

   NFS=`grep -c nfs /proc/cmdline`
   if [ "$NFS" -eq "1" ]; then 
      echo "Booting from nfs, don't set network" 
   else 
      if [ -e /etc/network/interfaces ]; then 
         ip addr flush eth0 
         /etc/init.d/networking stop 
         DHCP=`grep -c dhcp /etc/network/interfaces`
         if [ "$DHCP" -eq "1" ]; then 
            echo "Starting dhcp"
            /etc/init.d/udhcpc start 
         fi 
         /etc/init.d/networking start 
      fi
   fi

   echo "    " > /dev/fpsmall
   echo "ENIGMA 2" > /dev/fplarge
   echo "LOADING e2"

   stfbcontrol a 255
   until false
   do
      echo "starting e2->"
      /usr/local/bin/enigma2
      rtv=$?
      # update the GMT offset in case it changed while being turned on
      /bin/tffpctl --setgmtoffset
      echo "e2 ended <- RTV: " $rtv
      case "$rtv" in
         0) echo "0"
            echo "E2 ERROR"
            #kill tuxtxt because it inhibit e2 from
            #restart auf crashs. of course this could
            #ne done better ;-)
            /usr/bin/killall tuxtxt
            #rset
            showiframe -p /var/boot/bootlogo.mvi &
            echo "0" > /proc/progress;;
         1) echo "1"
            echo "SHUTDOWN"
            echo "SHUTDOWN" > /dev/fplarge
            init 0;;
         2) echo "2"
            echo "REBOOT"
            init 6;;
         3) echo "3"
            echo "E2 RESTART"
            #rset
            showiframe -p /var/boot/bootlogo.mvi &
            echo "0" > /proc/progress;;
         *) echo "*"
            echo "ERROR";;
      esac
   done 
fi

echo "REBOOT" > /dev/fplarge
echo "REBOOT"
fi
